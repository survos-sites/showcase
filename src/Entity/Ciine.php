<?php

declare(strict_types=1);

namespace App\Entity;

use App\Repository\CiineRepository;
use App\Workflow\CiineWFDefinition;
use DateTimeImmutable;
use Doctrine\DBAL\Types\Types;
use Doctrine\ORM\Mapping as ORM;
use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\Id;
use Survos\MeiliBundle\Metadata\MeiliIndex;
use Survos\StateBundle\Traits\MarkingInterface;
use Survos\StateBundle\Traits\MarkingTrait;
use Symfony\Component\Validator\Constraints\Url;

/**
 * @generated by code:entity
 */
#[ORM\Entity(repositoryClass: CiineRepository::class)]
#[MeiliIndex(
    searchable: ['title'],
    filterable: ['duration', 'featured', 'author'],
    sortable: ['featured', 'duration'],

)]
final class Ciine implements MarkingInterface
{
    use MarkingTrait;
    public function __construct()
    {
        $this->marking = CiineWFDefinition::PLACE_BASIC;
    }

    #[Column(type: Types::INTEGER)]
	#[Id]
	public ?int $id = null;

	#[Column(length: 255)]
	public ?string $title = null;

	#[Column(length: 255)]
	public ?string $author = null;

	#[Column(type: Types::BOOLEAN)]
	public ?bool $featured = null;

	#[Column(type: Types::INTEGER, nullable: true)]
	public ?int $duration = null;

	#[Column(length: 255)]
	public ?string $durationText = null;

	#[Column(type: Types::INTEGER, nullable: true)]
	public ?int $page = null;

    #[Column(type: Types::INTEGER, nullable: true)]
    public ?int $filesize = null;

	#[Column(length: 2048)]
	public ?string $castUrl = null;

	#[Column(length: 2048)]
	public ?string $downloadUrl = null;



    #[Column(type: Types::DATETIME_IMMUTABLE)]
    public DateTimeImmutable|string|null $scrapedAt = null {
        set(DateTimeImmutable|string|null $v) => match (true) {
            $v === null => null,
            $v instanceof DateTimeImmutable => $v,
            is_string($v) => new DateTimeImmutable($v),
        };
    }

    //	#[Column(type: Types::DATETIME_IMMUTABLE)]
//	public ?DateTimeImmutable $scrapedAt = null;
}
